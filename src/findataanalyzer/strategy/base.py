"""Base class for all trading strategies."""

from abc import ABC, abstractmethod
from typing import Any, Dict, List, Optional
import pandas as pd
from dataclasses import dataclass

@dataclass
class TradeSignal:
    """
    A structured trading signal, often generated by an AI agent or ML model.
    
    This matches the expected output format for the trading engine.
    """
    symbol: str
    action: str  # 'BUY', 'SELL', 'HOLD'
    
    # Optional fields for enhanced risk management and rationale
    entry_price: Optional[float] = None
    stop_loss_price: Optional[float] = None
    take_profit_price: Optional[float] = None
    position_size_pct: Optional[float] = None
    
    # Fields for ML-based strategies
    predicted_success_prob: Optional[float] = None
    
    rationale: Optional[str] = ""

    def __post_init__(self):
        """Validate the action field after initialization."""
        if self.action.upper() not in ['BUY', 'SELL', 'HOLD']:
            raise ValueError("Action must be one of 'BUY', 'SELL', or 'HOLD'")
        self.action = self.action.upper()


class BaseStrategy(ABC):
    """
    Abstract base class for trading strategies.
    
    All strategies must inherit from this class and implement the
    `generate_signals` method.
    """

    def __init__(self, config: Dict[str, Any]):
        """
        Initializes the strategy with its configuration.
        
        Args:
            config: A dictionary containing strategy-specific parameters.
        """
        self.config = config

    @abstractmethod
    def generate_signals(self, market_data: Dict[str, pd.DataFrame]) -> List[TradeSignal]:
        """
        Generates trading signals based on the provided market data.
        
        Args:
            market_data: A dictionary mapping timeframes (e.g., "1h", "15m")
                         to pandas DataFrames containing OHLCV data.
                         
        Returns:
            A list of TradeSignal objects.
        """
        raise NotImplementedError("Each strategy must implement the 'generate_signals' method.") 